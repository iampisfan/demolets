#ifndef _VENDOR_H_
#define _VENDOR_H_

#include "type.h"
#include "ieee80211.h"

#define MRVL_OUI	0x005043

enum mwl_vendor_attributes {
	MWL_VENDOR_ATTR_INVALID,
	MWL_VENDOR_ATTR_VERSION,
	MWL_VENDOR_ATTR_OPMODE,
	MWL_VENDOR_ATTR_STAMODE,
	MWL_VENDOR_ATTR_WPAWPA2MODE,
	MWL_VENDOR_ATTR_PASSPHRASE,
	MWL_VENDOR_ATTR_CIPHERSUITE,
	MWL_VENDOR_ATTR_WMM,
	MWL_VENDOR_ATTR_WMMEDCAAP,
	MWL_VENDOR_ATTR_AMSDU,
	MWL_VENDOR_ATTR_RXANTENNA,
	MWL_VENDOR_ATTR_OPTLEVEL,
	MWL_VENDOR_ATTR_STASCAN,
	MWL_VENDOR_ATTR_FIXRATE,
	MWL_VENDOR_ATTR_TXRATE,
	MWL_VENDOR_ATTR_MCASTPROXY,
	MWL_VENDOR_ATTR_11HSTAMODE,
	MWL_VENDOR_ATTR_MAC,
	MWL_VENDOR_ATTR_APPIE,
	MWL_VENDOR_ATTR_MLME,
	MWL_VENDOR_ATTR_MGMT,
	MWL_VENDOR_ATTR_COUNTERMEASURES,
	MWL_VENDOR_ATTR_SEQNUM,
	MWL_VENDOR_ATTR_RSSI,
	MWL_VENDOR_ATTR_LINKSTATUS,
	MWL_VENDOR_ATTR_STALISTEXT,
	MWL_VENDOR_ATTR_GROUPREKEY,
	MWL_VENDOR_ATTR_WMMEDCASTA,
	MWL_VENDOR_ATTR_HTBW,
	MWL_VENDOR_ATTR_FILTER,
	MWL_VENDOR_ATTR_FILTERMAC,
	MWL_VENDOR_ATTR_INTRABSS,
	MWL_VENDOR_ATTR_HIDESSID,
	MWL_VENDOR_ATTR_BCNINTERVAL,
	MWL_VENDOR_ATTR_DTIM,
	MWL_VENDOR_ATTR_GPROTECT,
	MWL_VENDOR_ATTR_PREAMBLE,
	MWL_VENDOR_ATTR_AGINGTIME,
	MWL_VENDOR_ATTR_SSID,
	MWL_VENDOR_ATTR_BSSID,
	MWL_VENDOR_ATTR_REGIONCODE,
	MWL_VENDOR_ATTR_RATEMODE,
	MWL_VENDOR_ATTR_WDSMODE,
	MWL_VENDOR_ATTR_DISABLEASSOC,
	MWL_VENDOR_ATTR_WDS,
	MWL_VENDOR_ATTR_11DMODE,
	MWL_VENDOR_ATTR_11HSPECMGT,
	MWL_VENDOR_ATTR_11HPWRCONSTR,
 	MWL_VENDOR_ATTR_11HCSAMODE,
 	MWL_VENDOR_ATTR_11HCSACOUNT,
 	MWL_VENDOR_ATTR_11HNOPTIMEOUT,
	MWL_VENDOR_ATTR_11HCACTIMEOUT, 
 	MWL_VENDOR_ATTR_CSMODE, 
 	MWL_VENDOR_ATTR_11HDFSMODE,
 	MWL_VENDOR_ATTR_11HCSACHAN, 
 	MWL_VENDOR_ATTR_GUARDINT,
	MWL_VENDOR_ATTR_EXTSUBCH, 
	MWL_VENDOR_ATTR_HTPROTECT, 
	MWL_VENDOR_ATTR_AMPDUFACTOR, 
	MWL_VENDOR_ATTR_AMPDUDEN, 
	MWL_VENDOR_ATTR_AMPDUTX, 
	MWL_VENDOR_ATTR_TXPOWER, 
	MWL_VENDOR_ATTR_FWSTAT, 
	MWL_VENDOR_ATTR_AUTOCHANNEL, 
	MWL_VENDOR_ATTR_MAXTXPOWER, 
	MWL_VENDOR_ATTR_STRICTSHARED, 
 	MWL_VENDOR_ATTR_PWRFRACTION, 
	MWL_VENDOR_ATTR_MIMOPS,
	MWL_VENDOR_ATTR_TXANTENNA,
	MWL_VENDOR_ATTR_HTGF,
	MWL_VENDOR_ATTR_HTSTBC,
	MWL_VENDOR_ATTR_3X3RATE,
	MWL_VENDOR_ATTR_INTOLERENT40,
	MWL_VENDOR_ATTR_TXQLIMIT,
	MWL_VENDOR_ATTR_RIFS,
	MWL_VENDOR_ATTR_BFTYPE,
	MWL_VENDOR_ATTR_BANDSTEER,
	MWL_VENDOR_ATTR_CHANNEL,
	MWL_VENDOR_ATTR_STATISTICS,

	NUM_MWL_VENDOR_ATTR,
	MAX_MWL_VENDOR_ATTR = NUM_MWL_VENDOR_ATTR - 1
};

enum mwl_vendor_attr_ie {
	MWL_VENDOR_ATTR_IE_INVALID,
	MWL_VENDOR_ATTR_IE_TYPE,
	MWL_VENDOR_ATTR_IE_LEN,
	MWL_VENDOR_ATTR_IE_MAC,
	MWL_VENDOR_ATTR_IE_REASSOC,
	MWL_VENDOR_ATTR_IE_DATA,
	MWL_VENDOR_ATTR_IE_CAPA,
	MWL_VENDOR_ATTR_IE_CAPA_LEN,

	NUM_MWL_VENDOR_ATTR_IE,
	MAX_MWL_VENDOR_ATTR_IE = NUM_MWL_VENDOR_ATTR_IE - 1
};

enum mwl_vendor_events {
	MWL_VENDOR_EVENT_TEST,
	MWL_VENDOR_EVENT_ASSOC,
	MWL_VENDOR_EVENT_DISASSOC,
	MWL_VENDOR_EVENT_PROBE_REQ,
	MWL_VENDOR_EVENT_AUTH,
	MWL_VENDOR_EVENT_WPS_REQ,
	MWL_VENDOR_EVENT_ACS_COMPLETED,
};

struct mwl_sta_statistics {
	uint32_t tx_packets;
	uint32_t rx_packets;
	uint64_t tx_bytes;
	uint64_t rx_bytes;
} __attribute__ ((packed));

struct ht_vht_capability {
	struct ieee80211_sta_ht_cap htcap;
	struct ieee80211_sta_vht_cap vhtcap;
} __attribute__ ((packed));

struct neighbor_list_entrie_t
{
	char ssid[32];
	u8 ssid_len;
	u8 not_found_count;
	s32 rssi;
	u8 bssid[ETH_ALEN];
	u32 bssid_info;
	u8 reg_class;
	u8 chan;
	u8 phy_type;
	u32 time_stamp;
	u8 md_ie[5];
	u8 width;
	u16 sta_cnt;
	u8 channel_util;
} __attribute__ ((packed));

#endif
